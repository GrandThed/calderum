{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(mongo:*)",
      "Bash(npm install:*)",
      "Bash(pnpm install:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(ls:*)",
      "Bash(npx jest:*)",
      "Bash(npm run type-check:*)",
      "Bash(pkill:*)",
      "Bash(npm test)",
      "Bash(npm run test:e2e:*)",
      "Bash(node:*)",
      "Bash(npx ts-node:*)",
      "Bash(taskkill:*)",
      "Bash(cmd /c:*)",
      "Bash(npm test:*)",
      "Bash(touch:*)",
      "Bash(PORT=3006 npx ts-node src/app.ts)",
      "Bash(pnpm backend:dev:*)",
      "Bash(pnpm dashboard:dev:*)",
      "Bash(powershell:*)",
      "Bash(curl:*)",
      "Bash(npm start)",
      "Bash(start /b npm run dev)",
      "Bash(npx nodemon:*)",
      "Bash(pnpm dev:*)",
      "Bash(npm run backend:dev:*)",
      "Bash(npm run dashboard:dev:*)",
      "Bash(net start:*)",
      "Bash(pnpm shared:build:*)",
      "Bash(pnpm build:*)",
      "Bash(dir:*)",
      "Bash(move dom-inspect-error.png test-screenshots )",
      "Bash(move dom-inspect-setup.png test-screenshots )",
      "Bash(move error-final.png test-screenshots )",
      "Bash(move login-page.png test-screenshots)",
      "Bash(find:*)",
      "Bash(start /b pnpm dashboard:dev)",
      "Bash(pnpm test:*)",
      "Bash(pnpm db:setup:*)",
      "Bash(git rm:*)",
      "Bash(rm:*)",
      "Bash(git commit:*)",
      "Bash(dart pub global activate:*)",
      "Bash(dart run build_runner build:*)",
      "Bash(flutter pub:*)",
      "Bash(dart analyze:*)",
      "Bash(dart pub:*)",
      "Bash(dart test:*)",
      "Bash(timeout 5 dart run bin/server.dart)",
      "Bash(timeout 10 dart run bin/server.dart)",
      "Bash(grep:*)",
      "Bash(dart compile:*)",
      "Bash(timeout:*)",
      "Bash(dart run:*)",
      "Bash(where sqlite3)",
      "Bash(git push:*)",
      "Bash(flutter analyze:*)",
      "Bash(flutter run:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:medium.com)",
      "Bash(git clone:*)",
      "Bash(make:*)",
      "Bash(flutter:*)",
      "Bash(tasklist:*)",
      "Bash(npx @modelcontextprotocol/inspector:*)",
      "Bash(rd /s /q appsbackend)",
      "WebFetch(domain:supabase.com)",
      "Bash(git reset:*)",
      "WebFetch(domain:dart.dev)",
      "Bash(dart mcp-server:*)",
      "Bash(where dart)",
      "Bash(echo $DART_SDK)",
      "Bash(supabase functions deploy:*)",
      "Bash(cp:*)",
      "Bash(tasklist | findstr flutter)",
      "Bash(netstat -ano | findstr :3001)",
      "WebSearch",
      "WebFetch(domain:localhost)",
      "Bash(cd:*)",
      "Bash(patrol build:*)",
      "Bash(patrol:*)",
      "WebFetch(domain:m3.material.io)",
      "Bash(flutter:*)",
      "Bash(where flutter)",
      "Bash(curl:*)",
      "Bash(powershell:*)",
      "Bash(git clone:*)",
      "Bash(export:*)",
      "Bash(echo $PATH)",
      "Bash(PATH=\"/c/flutter_sdk/flutter/bin:$PATH\")",
      "Bash(dart:*)",
      "mcp__dart-mcp__pub",
      "WebFetch(domain:pub.dev)",
      "mcp__dart-mcp__connect_dart_tooling_daemon",
      "mcp__dart-mcp__hot_reload",
      "mcp__dart-mcp__get_runtime_errors",
      "mcp__dart-mcp__dart_format",
      "mcp__dart-mcp__run_tests",
      "mcp__dart-mcp__add_roots",
      "mcp__dart-mcp__analyze_files",
      "WebFetch(domain:stackoverflow.com)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "C:"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "dart-mcp"
  ]
}